!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ITERATE_ARRAY_BEGIN	exercise1.c	4;"	d	file:
ITERATE_ARRAY_END	exercise1.c	14;"	d	file:
ITERATE_BST_BEGIN	tree.h	32;"	d
ITERATE_BST_END	tree.h	38;"	d
ITERATE_LIST_END	dll.h	48;"	d
ITERATE_NBRS_BEGIN	exercise2.c	39;"	d	file:
ITERATE_NBRS_END	exercise2.c	46;"	d	file:
ITERATE_ONE_HOP_NBRS_BEGIN	exercise2.c	49;"	d	file:
ITERATE_ONE_HOP_NBRS_END	exercise2.c	56;"	d	file:
ITERATIVE_LIST_BEGIN	dll.h	40;"	d
MAX_NBRS	exercise2.c	6;"	d	file:
NAME_SIZE	exercise2.c	7;"	d	file:
__TREE__	tree.h	2;"	d
add_data_to_dll	dll.c	/^add_data_to_dll (dll_t *dll, void *app_data){$/;"	f
add_nbr	exercise2.c	/^add_nbr(node_t *node1, node_t *node2){$/;"	f
add_tree_node_by_value	tree.c	/^add_tree_node_by_value(tree_t *tree, int n)$/;"	f
age	application.c	/^    int age;$/;"	m	struct:student_	file:
comparison_fn	dll.h	/^    int (*comparison_fn)(void *, void *);$/;"	m	struct:dll_
create_new_node	exercise2.c	/^create_new_node(char *name){$/;"	f
data	dll.h	/^    void *data;$/;"	m	struct:dll_node_
data	tree.h	/^    int data;$/;"	m	struct:tree_node
designation	application.c	/^    char designation[32];$/;"	m	struct:employee_	file:
dll_	dll.h	/^typedef struct dll_{$/;"	s
dll_node_	dll.h	/^typedef struct dll_node_{$/;"	s
dll_node_t	dll.h	/^} dll_node_t;$/;"	t	typeref:struct:dll_node_
dll_priority_insert_data	dll.c	/^dll_priority_insert_data (dll_t *dll, void *data){$/;"	f
dll_search_by_key	dll.c	/^dll_search_by_key (dll_t *dll, void *key){$/;"	f
dll_t	dll.h	/^} dll_t;$/;"	t	typeref:struct:dll_
emp_id	application.c	/^    unsigned int emp_id;$/;"	m	struct:employee_	file:
employee_	application.c	/^typedef struct employee_{$/;"	s	file:
employee_t	application.c	/^} employee_t;$/;"	t	typeref:struct:employee_	file:
get_left_most	tree.c	/^get_left_most(tree_node_t *node){$/;"	f
get_new_dll	dll.c	/^get_new_dll(){$/;"	f
get_next_inorder_succ	tree.c	/^get_next_inorder_succ(tree_node_t *node){$/;"	f
head	dll.h	/^    dll_node_t *head;$/;"	m	struct:dll_
init_tree	tree.c	/^init_tree(void)$/;"	f
init_tree_node	tree.c	/^tree_node_t* init_tree_node(int n)$/;"	f
key_match	dll.h	/^    int (*key_match)(void *, void *);$/;"	m	struct:dll_
left	dll.h	/^    struct dll_node_ *left;$/;"	m	struct:dll_node_	typeref:struct:dll_node_::dll_node_
left	tree.h	/^    struct tree_node *left;$/;"	m	struct:tree_node	typeref:struct:tree_node::tree_node
main	application.c	/^main(int argc, char **argv){$/;"	f
main	exercise1.c	/^main(int argc, char **argv){$/;"	f
main	exercise2.c	/^main(int argc, char **argv){$/;"	f
main	tree.c	/^main(int argc, char **argv){$/;"	f
name	application.c	/^    char name[32];$/;"	m	struct:employee_	file:
name	application.c	/^    char name[32];$/;"	m	struct:student_	file:
nbrs	exercise2.c	/^    struct node_ *nbrs[MAX_NBRS];$/;"	m	struct:node_	typeref:struct:node_::node_	file:
node_	exercise2.c	/^typedef struct node_{$/;"	s	file:
node_name	exercise2.c	/^    char node_name[NAME_SIZE];$/;"	m	struct:node_	file:
node_t	exercise2.c	/^} node_t ;$/;"	t	typeref:struct:node_	file:
parent	tree.h	/^    struct tree_node *parent;$/;"	m	struct:tree_node	typeref:struct:tree_node::tree_node
print_employee_db	application.c	/^print_employee_db(dll_t *student_db) {$/;"	f	file:
print_employee_details	application.c	/^print_employee_details(employee_t *employee){$/;"	f	file:
print_student_db	application.c	/^print_student_db(dll_t *student_db) {$/;"	f	file:
print_student_details	application.c	/^print_student_details(student_t *student){$/;"	f	file:
register_comparison_callback	dll.c	/^register_comparison_callback(dll_t *dll,$/;"	f
register_key_match_callback	dll.c	/^register_key_match_callback(dll_t *dll, $/;"	f
right	dll.h	/^    struct dll_node_ *right;$/;"	m	struct:dll_node_	typeref:struct:dll_node_::dll_node_
right	tree.h	/^    struct tree_node *right;$/;"	m	struct:tree_node	typeref:struct:tree_node::tree_node
rollno	application.c	/^    unsigned int rollno;$/;"	m	struct:student_	file:
root	tree.h	/^    tree_node_t *root;$/;"	m	struct:tree
salary	application.c	/^    unsigned int salary;$/;"	m	struct:employee_	file:
search_employee_by_emp_id	application.c	/^search_employee_by_emp_id(dll_t *employee_db, $/;"	f
search_employee_db_by_key	application.c	/^search_employee_db_by_key(void *data, void *key){$/;"	f	file:
search_student_by_rollno	application.c	/^search_student_by_rollno(dll_t *student_db, $/;"	f
search_student_db_by_key	application.c	/^search_student_db_by_key(void *data, void *key){$/;"	f	file:
student_	application.c	/^typedef struct student_{$/;"	s	file:
student_comparison_fn	application.c	/^student_comparison_fn(void *stud1, void *stud2){$/;"	f	file:
student_t	application.c	/^} student_t;$/;"	t	typeref:struct:student_	file:
tree	tree.h	/^typedef struct tree {$/;"	s
tree_node	tree.h	/^typedef struct tree_node {              $/;"	s
tree_node_t	tree.h	/^} tree_node_t;$/;"	t	typeref:struct:tree_node
tree_t	tree.h	/^} tree_t;$/;"	t	typeref:struct:tree
weight	application.c	/^    int weight;$/;"	m	struct:student_	file:
